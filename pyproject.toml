[project]
name = "ddns_digital_ocean"
version = "0.4.0"
description = "Python-based CLI tool for managing dynamic dns."
authors = [{ name = "Tyler Nivin", email = "tyler@nivin.tech" }]
readme = "README.md"
requires-python = ">=3.9"
dependencies = ["rich>=13.8.0", "requests>=2.32.3"]

[project.scripts]
do_ddns = 'ddns_digital_ocean.ddns:run'

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.2",
    "ruff>=0.6.2",
    "pytest-check>=2.3.1",
    "pytest-mock>=3.14.0",
    "requests-mock>=1.12.1",
]

[tool.ruff]
# Uncomment to over-ride the line-length used by ruff.
# Allowing line-length 100 for now due to prior code.
line-length = 100

[tool.ruff.lint]
# Configure which ruff rules to enable.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Unused noqa comments
    "RUF100",
    # Flake8-bandit
    "S",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
